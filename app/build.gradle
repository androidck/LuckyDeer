apply plugin: 'com.android.application'
//apply from: 'tinker-support.gradle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.lucky.deer"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 7
        versionName "1.0.7"
        flavorDimensions "versionCode"
        multiDexEnabled true
        resConfigs "zh"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            //abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
            abiFilters 'armeabi-v7a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "68c280557d2bdc4d55f591bc", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
        release {
            keyAlias 'luckydeer'
            keyPassword '123456'
            storeFile file('D:/LuckyDeer/luckydeer.jks')
            storePassword '123456'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs', 'src/main/jniLibs/']
        }
    }


    /*配置渠道*/
//    productFlavors {
//        web {}
//        /*设置渠道名*/
//        productFlavors.all {
//            flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//        }
//    }
    productFlavors {
    }

    /*applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (!variant.buildType.isDebuggable()) {
                def sourceFile = "${variant.flavorName}-${variant.buildType.name}"
                def replaceFile = "${variant.flavorName}_V${variant.versionName}_${defaultConfig.versionCode}_${variant.buildType.name}_${releaseTime()}"
                outputFileName = output.outputFile.name.replace(sourceFile, replaceFile);
            }
        }
    }*/


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            signingConfig signingConfigs.release
            zipAlignEnabled true

        }
        debug {
            signingConfig signingConfigs.release
            //混淆
            minifyEnabled false

        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    /*打印log日志库*/
    implementation 'com.orhanobut:logger:1.15'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'com.github.bumptech.glide:glide:4.8.0'

    /*hawk*/
    implementation 'com.orhanobut:hawk:2.0.1'

    /*qmui*/
    implementation 'com.qmuiteam:qmui:1.1.3'

    /*adapter*/
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40'

    /*侧滑控件*/

    //  implementation 'com.yanzhenjie:recyclerview-swipe:1.1.4'
    implementation 'com.blankj:utilcode:1.15.0'

    /*验证码输入框*/
    implementation 'com.jyn.verificationcodeview:verificationcodeview:1.0.0'

    /*滚轮效果*/
    implementation 'com.github.imkarl:CharacterPickerView:v0.2.7'

    /*解决RxJava内存泄漏*/
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'

    /*banner图*/
    implementation 'com.github.xiaohaibin:XBanner:1.6.3'

    /*banner图展示样式*/
    implementation 'com.facebook.fresco:fresco:1.10.0'
    implementation 'com.nineoldandroids:library:2.4.0'

    /*3D地图*/
    implementation 'com.amap.api:3dmap:6.5.0'

    /*定位*/
    implementation 'com.amap.api:location:4.3.0'

    //Zxing二维码扫描
    implementation 'cn.yipianfengye.android:zxing-library:2.2'

    /* 支付宝 SDK AAR 包所需的配置*/
    implementation(name: 'alipaySdk-15.5.7-20181023110917', ext: 'aar')

    /*视频控件*/
    implementation 'cjt.library.wheel:camera:1.1.9'

    /*阴影布局*/
    implementation 'com.android.support:cardview-v7:28.0.0'

    // 此处以JPush 3.1.1 版本为例。
    implementation 'cn.jiguang.sdk:jpush:3.1.1'

    // 此处以JCore 1.1.9 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.1.9'

    /*版本更新*/
    implementation 'com.qianwen:update-app:3.5.2'
    implementation 'com.qiniu:qiniu-android-sdk:7.3.13'
    implementation 'com.qiniu:qiniu-java-sdk:7.2.17'
    implementation 'com.qianwen:okhttp-utils:3.8.0'

    /*微信*/
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'

    /*时间选择器*/
    implementation 'com.github.addappcn:android-pickers:1.0.3'
    implementation project(':requestcore')
    implementation project(':model')
    implementation project(':loadstatusview')
    implementation project(':sharingfunction')
    implementation project(':textRecognition')
    implementation project(':cloudStorage')
    implementation project(':mapfeatures')
    implementation files('libs/ocr-sdk.jar')
    implementation 'com.qiniu:qiniu-android-sdk:7.3.13'
    implementation 'com.qiniu:qiniu-java-sdk:7.2.17'
    implementation 'com.squareup.okio:okio:2.1.0'
    implementation project(':umengfunction')
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-21'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-21'

    //没有使用特殊Header，可以不加这行

    // 阿里路由框架
    implementation 'com.alibaba:arouter-api:1.4.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    implementation 'com.yanzhenjie.recyclerview:support:1.3.1'

    //加快webview 加载速度
    implementation 'com.tencent.sonic:sdk:3.1.0'
    implementation 'com.hjq:toast:5.0'
    //latest.release指代最新的版本号
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'

    //bugly
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'

    /*高德搜索*/
    implementation 'com.amap.api:search:6.5.0.1'

    implementation 'ch.ielse:imagewatcher:1.0.3'

    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'
}
static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}


